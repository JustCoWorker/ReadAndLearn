library(ape)
library(igraph)
data2<-read.table('stormofswords.csv',header=TRUE)
data2
stormofswords<-read.table('stormofswords.csv',header=TRUE)
g <- graph.data.frame(stormofswords)
stormofswords[[1],[2]]
str(stormofswords)
stormofswords
help(graph.data.frame)
swords<-read.table('stormofswords.csv',header=TRUE)
str(swords)
swords<-read.csv('stormofswords.csv',header=TRUE)
str(swords)
g <- graph.data.frame(swords)
plot(g)
swords<-read.csv2('stormofswords.csv',header=TRUE)
g <- graph.data.frame(swords)
swords<-read.csv('stormofswords.csv',header=TRUE)
g <- graph.data.frame(swords)
fc <- fastgreedy.community(g)
is.directed(g)
help("graph.data.frame")
g <- graph.data.frame(swords,directed = F)
is.directed(g)
fc <- fastgreedy.community(g)
plot(fc,g)
source(map.R)
source("http://michael.hahsler.net/SMU/ScientificCompR/code/map.R")
E(g)$curved <- 0.2 #将连线设成弧线，数值越大弧线越弯
jpeg(filename='dolphins_curve1.jpg',width=800,height=800,units='px')
layout=layout.fruchterman.reingold
plot(g, layout=layout, vertex.size=map(degree(g),c(1,20)), vertex.color=map(degree(g),c(1,20)))
dev.off()
E(g)$curved <- 0.2 #将连线设成弧线，数值越大弧线越弯
jpeg(filename='dolphins_curve1.jpg',width=800,height=800,units='px')
layout=layout.fruchterman.reingold
plot(g, layout=layout, vertex.size=map(degree(g),c(1,20)), vertex.color=map(degree(g),c(1,20)))
dev.off()
plot(g, layout=layout, vertex.size=map(degree(g),c(1,20)), vertex.color=map(degree(g),c(1,20))
plot(g, layout=layout, vertex.size=map(degree(g),c(1,20)), vertex.color=map(degree(g),c(1,20))
)
plot(g, layout=layout,
vertex.size=map(degree(g),c(1,20)),
vertex.color=map(degree(g),c(1,20))
)
layout=layout.fruchterman.reingold
plot(g, layout=layout,
vertex.size=map(degree(g),c(1,20)),
vertex.color=map(degree(g),c(1,20))
)
library(igraph)
library(ape)
swords<-read.csv('stormofswords.csv',header=TRUE)
g <- graph.data.frame(swords,directed = F)
is.directed(g)
fc <- fastgreedy.community(g)
degree(g)
plot(degree(g))
betweenness(g)
hist(degree(g))
d <- degree(g)
str(d)
hist(d$nmae)
d$name
d.name
d[name]
mode(d)
type(d)
d[1]
d[1].name
attributes(d)
attributes(d[1])
attr(d[1],"names")
plot(attributes(d),d)
attributes(d).length
length(attributes(d))
library(UpSetR)
library(ggplot2)
library(grid)
library(plyr)
movies <- read.csv(system.file("extdata", "movies.csv", package = "UpSetR"),
header = T, sep = ";")
install.packages("UpSetR")
library(UpSetR)
library(ggplot2)
library(grid)
library(plyr)
movies <- read.csv(system.file("extdata", "movies.csv", package = "UpSetR"),
header = T, sep = ";")
str(movies)
attributes(d)
length(attributes(d))
length(d)
attributes(d).size
attributes(d).size()
attributes(d)[1]
attributes(d)[2]
attr(d,"names")
length(attr(d,"names"))
plot(length(attr(d,"names")),d)
d
str(d)
plot(length(attr(d,"names")),d)
d
plot(length(attr(d,"names")))
plot(attr(d,"names"),d)
plot(d,attr(d,"names"))
hist(d,attr(d,"names"))
attr(d,"names")
d
d[0]
d[1]
plot(d,attr(d,"names"))
plot(d
)
plot(d,labels=attr(d,"names"))
plot(d,labels=c(attr(d,"names"))
)
l <- c(attr(d,"names"))
attr(d,"names")
l <- attr(d,"names")
l
mode(l)
plot(d,labels=l)
l
plot(d,labels=l)
hist(d,labels=l)
hist(d,xlab = list(l))
dat <- as.Date( c("2010-04-02", "2010-04-06", "2010-04-09", "2010-04-10", "2010-04-14",
"2010-04-15", "2010-04-19",   "2010-04-21", "2010-04-22", "2010-04-23","2010-04-24",
"2010-04-25", "2010-04-26", "2010-04-28", "2010-04-29", "2010-04-30"))
dwka <- format(dat , "%a")
dwka
# [1] "Fri" "Tue" "Fri" "Sat" "Wed" "Thu" "Mon"
#  [8] "Wed" "Thu" "Fri" "Sat" "Sun" "Mon" "Wed"
# [15] "Thu" "Fri"
dwkn <- as.numeric( format(dat , "%w") ) # numeric version
hist( dwkn , breaks= -.5+0:7, labels= unique(dwka[order(dwkn)]))
dat
dwka
library(igraph)
library(ape)
swords<-read.csv('stormofswords.csv',header=TRUE)
g <- graph.data.frame(swords,directed = F)
is.directed(g)
fc <- fastgreedy.community(g)
layout=layout.fruchterman.reingold
plot(g, layout=layout,
vertex.size=map(degree(g),c(1,20)),
vertex.color=map(degree(g),c(1,20))
)
source("http://michael.hahsler.net/SMU/ScientificCompR/code/map.R")
layout=layout.fruchterman.reingold
plot(g, layout=layout,
vertex.size=map(degree(g),c(1,20)),
vertex.color=map(degree(g),c(1,20))
)
sg1 <- cluster_spinglass(g, spins=3, gamma=1.0)
jpeg(filename='dolphins_commu10.jpg',width=800,height=800,units='px')
layout=layout.circle
plot(g, layout=layout, vertex.size=5, vertex.color= rainbow(10, .8, .8, alpha=.8)[sg1$membership],)
dev.off()
plot(g, layout=layout, vertex.size=5, vertex.color= rainbow(10, .8, .8, alpha=.8)[sg1$membership],)
plot(g, layout=layout,
vertex.size=map(degree(g),c(1,20)),
vertex.color=map(degree(g),c(1,20))
)
plot(g, layout=layout,
vertex.size=map(degree(g),c(1,20)),
vertex.color=map(degree(g),c(1,20))
)
layout=layout.fruchterman.reingold
plot(g, layout=layout,
vertex.size=map(degree(g),c(1,20)),
vertex.color=map(degree(g),c(1,20))
)
degree(g)
dat <- as.Date( c("2010-04-02", "2010-04-06", "2010-04-09", "2010-04-10", "2010-04-14",
"2010-04-15", "2010-04-19",   "2010-04-21", "2010-04-22", "2010-04-23","2010-04-24",
"2010-04-25", "2010-04-26", "2010-04-28", "2010-04-29", "2010-04-30"))
dwka <- format(dat , "%a")
dwka
# [1] "Fri" "Tue" "Fri" "Sat" "Wed" "Thu" "Mon"
#  [8] "Wed" "Thu" "Fri" "Sat" "Sun" "Mon" "Wed"
# [15] "Thu" "Fri"
dwkn <- as.numeric( format(dat , "%w") ) # numeric version
hist( dwkn , breaks= -.5+0:7, labels= unique(dwka[order(dwkn)]))
hist( dwkn , breaks= -.4+0:7, labels= unique(dwka[order(dwkn)]))
hist( dwkn , breaks= -.1+0:7, labels= unique(dwka[order(dwkn)]))
hist( dwkn , breaks= -.1+0:19, labels= unique(dwka[order(dwkn)]))
help(hist)
hist( dwkn , breaks=Sturges, labels= unique(dwka[order(dwkn)]))
hist( dwkn , breaks="Sturges", labels= unique(dwka[order(dwkn)]))
hist(g,breaks="Sturges")
hist(g)
hist(degree(d),breaks="Sturges")
hist(degree(g),breaks="Sturges")
hist(degree(g),breaks="Sturges")
hist(degree(d),breaks= -.1+0:19)
hist(degree(g),breaks= -.1+0:19)
hist(degree(g),breaks= -.1+0:10)
hist(degree(g),breaks= -.1+0:200)
hist(degree(g),breaks= -.1+0:171)
hist(degree(g),breaks= -.1+0:150)
hist(degree(g),breaks= -.1+0:50)
hist(degree(g),breaks= -.1+0:40)
hist(degree(g),breaks= -.1:40)
hist(degree(g),breaks= -.1:40)
hist(degree(g),breaks= 3)
hist(degree(g),breaks= 1)
hist(degree(g),breaks= 40)
hist(degree(g),breaks= 40)
hist(degree(g),breaks= 50)
hist(degree(g),breaks= 60)
hist(degree(g),breaks= 100)
bins=seq(-3.5,3.5,by=0.5)
hist(degree(g),breaks=bins)
bins=seq(0,50,by=0.5)
hist(degree(g),breaks=bins)
hist(degree(g),breaks=bins=seq(0,50,by=0.5))
hist(degree(g),breaks=seq(0,50,by=1))
hist(degree(g),breaks=seq(0,50,by=0.5))
hist(degree(g),breaks=seq(0,50,by=0))
hist(degree(g),breaks=seq(0,50,by=1))
hist(degree(g),breaks=seq(0,50,by=0.8))
hist(degree(g),breaks=seq(0,50,by=0.5))
seq(0,50,by=0.5)
hist(d,breaks=seq(0,50,by=0.5),labels(attr(d,"names")))
d <- degree(g)
hist(d,breaks=seq(0,50,by=0.5),labels(attr(d,"names")))
hist(d,breaks=seq(0,50,by=0.5),labels=(attr(d,"names")))
degree(d)
d
d
d[1]
d[2]
d[3]
d[4]
d[5]
d[6]
hist(d,breaks=seq(0,50,by=0.5))
plot(d)
length(d)
max(d)
boxplot(d)
max(d)
d <- degree(g)
plot(d)
plot(d,labels=(attr(d,"names")))
plot(d,labels=attr(d,"names"))
plot(d,attr(d,"names"))
plot(attr(d,"names"),d)
attr(d,"names")
plot(1:7, rnorm(7), main = "axis() examples",
type = "s", xaxt = "n", frame = FALSE, col = "red")
axis(1, 1:7, LETTERS[1:7], col.axis = "blue")
axis(1, 1:7, LETTERS[1:7], col.axis = "blue")
plot(d)
axis(1, 1:7, LETTERS[1:7], col.axis = "blue")
axis(1, 1:7, attr(d,"names"), col.axis = "blue")
axis(1, 1:107, attr(d,"names"), col.axis = "blue")
axis(1, 1:107, attr(d,"names"), col.axis = "blue")
plot(d)
axis(1, 1:107, attr(d,"names"), col.axis = "blue")
help(axis)
help(axis)## Create some text labels
labels <- paste("Label", seq_len(ncol(xx)), sep = " ")
## Plot text labels with some rotation at the top of the current figure
text(seq_len(length(xx)),rep(1.4,length(xx)), srt = 90, adj = 1,
labels = labels, xpd = TRUE,cex=0.8,srt=60,
col=c("darkred","red","grey20","grey40"))
## Create some text labels
labels <- paste("Label", seq_len(ncol(xx)), sep = " ")
## Plot text labels with some rotation at the top of the current figure
text(seq_len(length(xx)),rep(1.4,length(xx)), srt = 90, adj = 1,
labels = labels, xpd = TRUE,cex=0.8,srt=60,
col=c("darkred","red","grey20","grey40"))
tt <- table(sample(LETTERS[1:6], 100, rep=T))
library(lattice)
barchart(tt, horiz=F,
scales=list(x=list(rot=45, labels=paste("Fancy label", 1:6))))
tt
table(attr(d,"names"),d)
table(d,attr(d,"names"))
tt <- table(d,attr(d,"names"))
library(lattice)
barchart(tt, horiz=F,
scales=list(x=list(rot=45, labels=paste("Fancy label", 1:6))))
